
configfile: "config.yaml"

rule all:
    input:
        expand("06_calls_annot/{sample}.annotated.vcf.gz", sample=config["samples"]), 
        expand("06_calls_annot/{sample}.variants.html", sample=config["samples"])

rule fastp_pre:
    input:
        sample=[ "data/{sample}_1.fastq.gz", "data/{sample}_2.fastq.gz" ]
    output:
        trimmed=[ "01_preprocessing/{sample}_1.fastq.gz", "01_preprocessing/{sample}_2.fastq.gz" ],
        html="01_preprocessing/{sample}_report.html",
        json="01_preprocessing/{sample}_report.json"
    threads: 2
    log:
        "logs/fastp/{sample}.log"
    wrapper:
        "v2.6.0/bio/fastp"

rule bwa_mem:
    input:
        reads=["01_preprocessing/{sample}_1.fastq.gz", "01_preprocessing/{sample}_2.fastq.gz"],
        idx=multiext(config["genome"], ".amb", ".ann", ".bwt", ".pac", ".sa")
    output:
        "02_mapped/{sample}.bam"
    log:
        "logs/bwa_mem/{sample}.log"
    params:
        extra=r"-R '@RG\tID:{sample}\tSM:{sample}'",
        sort="samtools",             # Can be 'none', 'samtools' or 'picard'.
        sort_order="coordinate",  # Can be 'queryname' or 'coordinate'.
        sort_extra=""            # Extra args for samtools/picard.
    threads: 8
    wrapper:
        "v2.6.0/bio/bwa/mem"

rule samtools_index:
    input:
        "02_mapped/{sample}.bam"
    output:
        "02_mapped/{sample}.bam.bai"
    log:
        "logs/samtools_index/{sample}.log"
    params:
        "" # optional params string
    wrapper:
        "v2.6.0/bio/samtools/index"

rule sambamba_markdup:
    input:
        "02_mapped/{sample}.bam"
    output:
        "03_mapped_rmdup/{sample}.rmdup.bam"
    params:
        extra="-r"  # optional parameters
    log:
        "logs/sambamba-markdup/{sample}.log"
    threads: 8
    wrapper:
        "v2.6.0/bio/sambamba/markdup"

rule samtools_index_rmdup:
    input:
        "03_mapped_rmdup/{sample}.rmdup.bam"
    output:
        "03_mapped_rmdup/{sample}.rmdup.bam.bai"
    log:
        "logs/samtools_index/{sample}.rmdup.log"
    params:
        "" # optional params string
    wrapper:
        "v2.6.0/bio/samtools/index"

rule freebayes:
    input:
        alns="03_mapped_rmdup/{sample}.rmdup.bam",
        idxs="03_mapped_rmdup/{sample}.rmdup.bam.bai",
        ref=config["genome"]
    output:
        vcf = "04_calls/{sample}.vcf"
    log:
        "logs/freebayes/{sample}.log"
    params:
        normalize="-a",
    threads: 8
    resources:
        mem_mb=1024,
    wrapper:
        "v2.6.0/bio/freebayes"

rule filter_vcf:
    input:
        "04_calls/{sample}.vcf"
    output:
        "05_calls_filt/{sample}.filtered.vcf"
    params:
        extra="--remove-indels --min-meanDP 10 --minQ 100 --max-maf 0 --recode --recode-INFO-all"
    log:
        "logs/vcftools/{sample}_filter.log"
    wrapper:
        "v2.6.0/bio/vcftools/filter"

rule annotate_variants:
    input:
        calls="05_calls_filt/{sample}.filtered.vcf",  # .vcf, .vcf.gz or .bcf
        cache="resources/vep/cache",  # can be omitted if fasta and gff are specified
        plugins="resources/vep/plugins",
    output:
        calls="06_calls_annot/{sample}.annotated.vcf.gz",  # .vcf, .vcf.gz or .bcf
        stats="06_calls_annot/{sample}.variants.html",
    params:
        plugins=[],
        extra="--everything",  # optional: extra arguments
    log:
        "logs/vep/{sample}_annotate.log",
    threads: 4
    wrapper:
        "v2.6.0/bio/vep/annotate"


